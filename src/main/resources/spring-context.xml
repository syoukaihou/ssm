<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/task
                            http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- 当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/> 移除了 -->
    <context:component-scan base-package="com.snsprj.service" />

    <!-- AutowiredAnnotationBeanPostProcessor, CommonAnnotationBeanPostProcessor, PersistenceAnnotationBeanPostProcessor, 
        RequiredAnnotationBeanPostProcessor -->
    <!-- <context:annotation-config /> -->


    <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" />

    <!-- 定义使用c3p0连接池的数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 整合spring与mybatis -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />

        <!-- 自动扫描mapping.xml文件，当我们的Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值。 -->
        <property name="mapperLocations" value="classpath:com/snsprj/mapper/*.xml" />

        <property name="typeAliasesPackage" value="com.snsprj.dto" />

        <!-- pageHelper分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            helperDialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.snsprj.dao" />

        <!-- Specifies which {@code SqlSessionFactory} to use in the case that there is more than one in the spring context. 
            Usually this is only needed when you have more than one datasource. -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- 配置数据库事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置spring定时任务 -->
    <!--启用注解驱动的定时任务 -->
    <task:annotation-driven scheduler="scheduler" />
    <!-- 配置线程池 -->
    <task:scheduler id="scheduler" pool-size="10" />

    <!--扫描定时任务类 -->
    <context:component-scan base-package="com.snsprj.quartz" />

    <!-- 引用外部配置文件 -->
    <!-- <import resource="spring-bean.xml"/> -->
</beans>